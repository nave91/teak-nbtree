{"name":"Teak-nbtree","tagline":"Implementation of Test Essential Assumption Knowledge(TEAK) on an nb-Tree(Tree with leaf nodes as naive bayes classifiers)","body":"##Introduction\r\nTeak acronym for \"Test Essential Assumption Knowledge\". [Know More](http://menzies.us/pdf/11teak.pdf)\r\n\r\nEssentially--*Assume something, Focus on it, Prune rest and predict*\r\n\r\nNb-Tree is tree of tables as leaves. Each leaf has a naive bayes classifies running on its table of data. \r\nWe can also run naive bayes on nodes(i.e. running on all of its child leaves)\r\n\r\n**Assumption** : When a table is mapped on to an xy-plane. Similar rows are located closely to each other.\r\n\r\nNote:In above sentence, closely refers to eucledian distance between two rows on an xy plane. \r\n\r\nPS: I will be using xy-plane instead of a 2D-plane\r\n\r\n##Hypothesis\r\n\r\nA table can be mapped onto an xy plane using this pretty little code:\r\n\r\n```\r\nrow = any(data)\r\neast = furthest(row)\r\nwest = furthest(east)\r\nc = dist(east,west)\r\nfor each row r in data:\r\n    a = dist(r,east)\r\n    b = dist(r,west)\r\n    x = (a^2 + c^2 - b^2)/2c\r\n    y = (a^2 + x^2)^0.5    \r\n```\r\n\r\nSimilar rows are grouped aka they are close to each other on the xy-plane.\r\n\r\n1. We can increase the effectiveness of naive-bayes classifier by running it only on those similar rows that are close to the _row that is to be predicted_. \r\n2. In order to increase efficiency of nb-tree, for a set of test rows I will generate a tree only once and get a list of tables(or leaves).\r\n3. Efficiency will be considerably increased as we only need to measure distance between a row and a list of rows.\r\n4. Then, I will determine which leaf is closest to each given test row.\r\n5. Run a naive bayes classifier on it to get the accuracy.\r\n\r\nShown as:\r\n\r\n``` \r\nfor each row \"t\" in test:\r\n        +Using cosine and Pythagoras, map the training data on xy plane.\r\n        +tx,ty<----------Also map test row \"t\" on that same xy plane.\r\n        +run xy.tiles to build a tree and get a set of leaves(tables)\r\n        +xy_means_of_leaves=calculate mean of x and y in each leaf\r\n        +nearest_leaf = least_eucledian_distance(each(xy_means_of_leaves) and (tx,ty))  \r\n        +Run nb on nearest_leaf and calculate accuracy\r\n```\r\n\r\n##Data\r\n\r\nI used `diabetes` and `iris` to test my hypothesis. Other datasets are on their way. Lot of preprocessing needs to be done.\r\n\r\nInitial projection of [diabetes](https://github.com/nave91/teak-nbtree/blob/master/data/diabetes.csv) on xy-plane:\r\n\r\n![diabetes](https://raw.github.com/nave91/teak-nbtree/gh-pages/images/initial_dia.jpg)\r\n\r\nAfter generating leaves, xy projection of mean of each leafs:\r\n\r\n![diabetes](https://raw.github.com/nave91/teak-nbtree/gh-pages/images/leaf_dia.jpg)\r\n\r\nInitial projection of [iris](https://github.com/nave91/teak-nbtree/blob/master/data/diabetes.csv) on xy-plane:\r\n\r\n![diabetes](https://raw.github.com/nave91/teak-nbtree/gh-pages/images/initial_iris.jpg)\r\n\r\nAfter generating leaves, xy projectin of mean of each leafs:\r\n\r\n![diabetes](https://raw.github.com/nave91/teak-nbtree/gh-pages/images/leaf_iris.jpg)\r\n\r\n\r\n##Analysis\r\n\r\n```\r\n>>close 10\r\n+test: [6.1, 2.8, 4.7, 1.2, '2']\r\nclosest leaf: 10 : [[6.2, 2.2, 4.5, 1.5, '2'], [6.3, 3.3, 4.7, 1.6, '2'],\r\n[6.0, 2.2, 4.0, 1.0, '2'], [5.4, 3.0, 4.5, 1.5, '2'], [5.9, 3.0, 5.1, 1.8, '3'],\r\n[7.0, 3.2, 4.7, 1.4, '2'], [5.8, 2.7, 5.1, 1.9, '3'], [5.9, 3.2, 4.8, 1.8, '2'],\r\n[5.5, 2.3, 4.0, 1.3, '2'], [6.0, 3.4, 4.5, 1.6, '2'], [5.8, 2.7, 5.1, 1.9, '3'],\r\n[6.0, 2.2, 5.0, 1.5, '3']] len: 12\r\n0.26461058269 norm value for $sepallength\r\n1.08565813063 norm value for $sepalwidth\r\n5.43565621149e-12 norm value for $petallength\r\n0.0209937597598 norm value for $petalwidth\r\n0.794035419022 norm value for $sepallength\r\n0.75813597268 norm value for $sepalwidth\r\n0.963579623489 norm value for $petallength\r\n0.913012880861 norm value for $petalwidth\r\nlikelyhood: {'3': -33.02818692221201, '2': -2.3785944862966026}\r\nwant: 2 got: 2\r\n```\r\n\r\n###There is a problem\r\nIf the dataset has a low frequency class values, then accuracy might not be a good factor for evaluation.\r\n\r\nWe need to use \"precision\" and \"recall\" which are class specific and can be used to evaluate predictors.\r\n\r\nRemember [Abcd.py](https://github.com/nave91/teak-nbtree/blob/master/src/abcd.py)\r\n\r\n##Results\r\n\r\nAfter running the hypothesis for accuracy, the output is as follows:\r\n\r\nDiabetes:\r\n\r\n```\r\nnb\r\n67.97 68.63 69.28 69.93 71.24 71.24 72.55 73.2 73.86 \r\n73.86 74.51 74.51 74.51 74.51 75.16 75.82 75.82 76.47\r\n77.12 77.12 77.12 77.78 81.05 81.05 82.35 \r\n\r\nnb-tree\r\n39.87 41.83 42.48 43.14 43.14 45.75 46.41 47.06 47.71\r\n48.37 49.67 50.33 50.33 50.98 50.98 50.98 50.98 51.63\r\n51.63 52.29 52.29 54.25 54.25 54.25 54.9\r\n\r\n```\r\n\r\nIris:\r\n\r\n```\r\nnb\r\n86.67 90.0 90.0 90.0 93.33 93.33 93.33 93.33 93.33 93.33\r\n93.33 96.67 96.67 96.67 96.67 96.67 96.67 100.0 100.0 100.0\r\n100.0 100.0 100.0 100.0 100.0\r\n \r\nnb-tree\r\n73.33 73.33 73.33 73.33 73.33 76.67 76.67 76.67 80.0 80.0\r\n80.0 83.33 83.33 86.67 86.67 86.67 86.67 86.67 86.67 90.0\r\n90.0 93.33 93.33 93.33 93.33\r\n\r\n```\r\n\r\n##Discussion\r\n\r\nAs we can observe, the effectiveness of naive bayes is decreased when the hypothesis is implemented.\r\n\r\nMany cases are possible:\r\n\r\n1. Our initial assumption that similar rows are closer on xy-plane may or may not be true.\r\n2. The naive bayes is implemented on leaves rather than on nodes which may be decreasing it accuracy.\r\n3. In other words, the leaf that we consider as closest for a test row may not be so close?\r\n4. Low frequency class problem?\r\n5. Datasets are not effective.\r\n\r\n##Future work\r\n\r\n* I would like to test the hypothesis by running naive bayes at nodes instead of leaves by recursively traversing the tree till I get a good node of similar rows.\r\n\r\n* Also, as the hypotheses is tested only on 2 datasets, I would like to test it on varying sets of data and check its effectiveness.\r\n\r\n* I would also try to calculate \"precision\" and \"recall\" to better evaluate predictors and eliminate low frequency class problem.\r\n\r\n##Conclusion\r\n\r\nThe naive bayes tree may not be effective when predictor is run on leaves of tree. The assumption that nb is more effective when it is run on similar data may not hold true.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}